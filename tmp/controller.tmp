<?php
namespace controllers;
use \strawframework\base\Controller;
/**
 * Auto generate by AGA v{{version}}
 * Generate at: {{time}}
 */
class {{name}} extends Controller{

    public function __construct(){

        //是否加载模板
        parent::__construct($isView=false);
    }

    /**** 以下方法均应根据实际业务做调整 ****/

    /**
     *  默认首页
     */
    public function index(){

        echo '{{name}}\'s default homepage';
    }

    /**
     *  获取数据信息
     */
    public function get_info(){
        ${{pkField}} = $_POST['{{pkField}}'];

        if (!${{pkField}})
            $this->_error('{{pkField}} 不能为空');

        $data = $this->{{model}}Model->getInfoViaPk(${{pkField}});
        //数据为空时
        if (!$data)
            $this->_error('数据为空', parent::ISEMPTY);

        $this->_success('', ['item' => $data]);
    }

    /**
     *  获取数据信息
     */
    public function get_list(){
        $page = intval($_POST['page'] ?: 1);
        $count = $_POST['count'];

        $res = $this->{{model}}Model->getList($page, $order = '{{pkField}} DESC', $count);

        //数据为空
        if (!$res['list'])
            $this->_error('数据为空', parent::ISEMPTY);

        /**
        *   返回数组
        *   [
        *       'list' => $list,
        *       'total' => $total
        *   ]
        */
        $this->_success('', $res);
    }


    /**
     *  通过 Javascript 方法 serialize 获取数据并新增
     *  @需要增加数据准备性检查
     *  @todo 增加说明文档地址
     */
    public function create(){
        //获取 serialize 的数据
        $data = $this->_getFormData();
        //哪些字段不为空值, 请填写以下数组
        $needArr = [];
        //自动检查空值并报错
        $this->_emptyError($needArr, $data);
        //@增加其他可用性检查

        $newId = $this->{{model}}Model->newData($data);

        //写入失败了
        if (false == $newId)
            $this->_error('新增失败');

        $this->_success();
    }


    /**
     *  通过 Javascript 方法 serialize 获取数据并更新
     *  @需要增加数据准备性检查
     *  @todo 增加说明文档地址
     */
    public function modify(){
        //获取 serialize 的数据
        $data = $this->_getFormData();
        //哪些字段不为空值, 请填写以下数组
        $needArr = [];
        //自动检查空值并报错
        $this->_emptyError($needArr, $data);
        //@增加其他可用性检查

        //获取主键 或者 查询条件
        ${{pkField}} = $_POST['{{pkField}}'];

        if (!${{pkField}})
            $this->_error('{{pkField}} 不能为空');

        $modifyId = $this->{{model}}Model->modify($data, ${{pkField}});

        //写入失败了
        if (false == $modifyId)
            $this->_error('更新失败');

        $this->_success();
    }

    /**
     *  根据条件删除数据
     *  @需要增加数据准备性检查
     */
    public function remove(){
        //获取主键 或者 查询条件
        ${{pkField}} = $_POST['{{pkField}}'];

        if (!${{pkField}})
            $this->_error('{{pkField}} 不能为空');

        $status = $this->{{model}}Model->remove(${{pkField}});

        //写入失败了
        if (false == $status)
            $this->_error('删除失败');

        $this->_success();
    }
}
